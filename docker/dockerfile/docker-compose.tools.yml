version: '3.1'
networks:
  intes:
services:
  #Â Simple interface to connect any type of sql database
  adminer:
    image: adminer
    restart: always
    ports:
      - 9000:8080
  omnidb-gui:
    image: omnidbteam/omnidb:latest
    restart: always
    ports:
      - 9001:8000
    networks:
      - intes
    volumes:
      - ./omnidb-server.volume:/etc/omnidb
    # You need to run this command directly in the container:
    #     python omnidb-server.py --createsuperuser=admin pass
  motoradmin-db:
    image: postgres
    restart: always
    ports:
      - 9002:5432
    networks:
      - intes
    volumes:
      - ./motoradmin-db.volume:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: motoradmin
  # Solution to create dashboards from sql databases
  motoradmin:
    depends_on:
      - motoradmin-db
    image: motoradmin/motoradmin:latest
    ports:
      - 9003:3000
    networks:
      - intes
    volumes:
      - ./motoradmin.volume:/app
    environment:
      SECRET_KEY_BASE:
      DATABASE_URL: postgresql://user:password@motoradmin-db:5432/motoradmin
  # Web interface to manage postgresql databases
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - 5050:5050
    networks:
      - intes
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: strongpassword
      PGADMIN_LISTEN_PORT: 5050

  n8n-traefik:
    image: "traefik"
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:8001"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.websecure.address=:8002"
      - "--certificatesresolvers.mytlschallenge.acme.tlschallenge=true"
      - "--certificatesresolvers.mytlschallenge.acme.email=${SSL_EMAIL}"
      - "--certificatesresolvers.mytlschallenge.acme.storage=/letsencrypt/acme.json"
    ports:
      - "8001:8001"
      - "8002:8002"
    volumes:
      - traefik_data:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro
  # Workflow automation tool
  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    ports:
      - "127.0.0.1:5678:5678"
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`${SUBDOMAIN}.${DOMAIN_NAME}`)
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.entrypoints=web,websecure
      - traefik.http.routers.n8n.tls.certresolver=mytlschallenge
      - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN_NAME}
      - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.routers.n8n.middlewares=n8n@docker
    environment:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_HOST=${SUBDOMAIN}.${DOMAIN_NAME}
      - N8N_PORT=5678
      - N8N_PROTOCOL=https
      - N8N_RUNNERS_ENABLED=true
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - TZ=${GENERIC_TIMEZONE}
    volumes:
      - n8n_data:/home/node/.n8n
      - ./local-files:/files

volumes:
  n8n_data:
  traefik_data:
